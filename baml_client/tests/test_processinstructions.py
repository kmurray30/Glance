# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..__do_not_import.generated_baml_client import baml
from ..baml_types import IProcessInstructionsStream, Instructions
from baml_lib._impl.deserializer import Deserializer
from json import dumps
from pytest_baml.ipc_channel import BaseIPCChannel
from typing import Any


@baml.ProcessInstructions.test(stream=True)
async def test_gorgeous_blush(ProcessInstructionsImpl: IProcessInstructionsStream, baml_ipc_channel: BaseIPCChannel):
    def to_str(item: Any) -> str:
        if isinstance(item, str):
            return item
        return dumps(item)

    case = {"query": "For the AC unit, how do I change the filter", "answer": "To change the filter of an AC unit, follow these steps:\n1. Open the panel of the AC unit.\n2. Loosen the clasp of the filter.\n3. Remove the axile bush of the horizontal louver.\n4. Push the filter inward and then raise it to remove it.\n\nPlease let me know if there is anything else I can help you with.", }
    deserializer_query = Deserializer[str](str) # type: ignore
    query = deserializer_query.from_string(to_str(case["query"]))
    deserializer_answer = Deserializer[str](str) # type: ignore
    answer = deserializer_answer.from_string(to_str(case["answer"]))
    async with ProcessInstructionsImpl(
        query=query,
        answer=answer
    ) as stream:
        async for response in stream.parsed_stream:
            baml_ipc_channel.send("partial_response", response.json())

        await stream.get_final_response()

